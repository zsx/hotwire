#!/usr/bin/python
# -*- tab-width: 4; indent-tabs-mode: nil -*-

import sys, os, getopt, logging, re, string, Queue

import gtk, gobject, pango

if __name__ == '__main__' and hasattr(sys.modules['__main__'], '__file__'):
    basedir = os.path.dirname(os.path.abspath(__file__))
    up_basedir = os.path.dirname(basedir)
    if os.path.basename(basedir) == 'ui':
        sys.path.insert(0, up_basedir)
import hotwire
import hotwire.sysdep
import hotwire.config
import hotwire.logutil
import hotwire.util
from hotwire.version import __version__, svn_version_str

try:
    from hotwire.sysdep.ipc import Ipc
    ipc_avail = True
except NotImplementedError, e:
    ipc_avail = False

_logger = logging.getLogger("hotwire.RunttyMain")

def usage():
    sys.stdout.write('Hotwire runtty %s %s\n' % (__version__, svn_version_str()))
    sys.stdout.write("%s [--debug] [--debug-modules=mod1,mod2...] [--help]\n" % (sys.argv[0],))

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hdsn", ["help", "debug", "debug-modules=",])
    except getopt.GetoptError:
        usage()
        sys.exit(2)

    if len(args) == 0:
      sys.stderr.write('no arguments specified, exiting\n')
      sys.exit(1)

    debug = False
    debug_modules = []
    for o, v in opts:
        if o in ('-d', '--debug'):
            debug = True
        elif o in ('--debug-modules'):
            debug_modules = v.split(',')
        elif o in ("-h", "--help"):
            usage()
            sys.exit()

    default_log_level = logging.ERROR
    if debug:
        default_log_level = logging.DEBUG

    hotwire.logutil.init(default_log_level, debug_modules, 'hotwire.')

    _logger.debug('initializing threads')
    gobject.threads_init()
    
	from hotwire.sysdep.ipc import Ipc
    ipc = Ipc.getInstance()
    ipc.run_tty_command(args)		

if __name__ == "__main__":
    main()

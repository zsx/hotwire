#!/usr/bin/python
# -*- mode: python; tab-width: 4; indent-tabs-mode: nil -*-

import os, sys, unittest, logging, platform, getopt

if os.path.basename(os.path.dirname(__file__)) == 'ui':
    sys.path.insert(0, '.')
import hotwire
import hotwire.logutil
import hotwire.persist
import hotwire.test_command
if platform.system() == 'Linux':
    import hotwire.test_command_unix
    unix_avail = True
else:
    unix_avail = False
import hotwire.test_completion
import hotwire.sysdep
import hotwire.sysdep.fs
import hotwire.sysdep.proc_impl
import hotwire.version
from hotwire.version import __version__, svn_version_str

def usage():
    sys.stdout.write('Hotwire %s %s\n' % (__version__, svn_version_str()))
    sys.stdout.write("%s [--debug] [--debug-modules=mod1,mod2...] [--help]\n" % (sys.argv[0],))

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hd", ["help", "debug", "debug-modules="])
    except getopt.GetoptError:
        usage()
        sys.exit(2)

    debug = False
    debug_modules = []
    for o, v in opts:
        if o in ('-d', '--debug'):
            debug = True
        elif o in ('--debug-modules'):
            debug_modules = v.split(',')
        elif o in ("-h", "--help"):
            usage()
            sys.exit()

    default_log_level = logging.ERROR
    if debug:
        default_log_level = logging.DEBUG
    hotwire.logutil.init(default_log_level, debug_modules, 'hotwire.')
    print "Running tests on %s %s" % (hotwire.version.__version__, hotwire.version.svn_version_str())
    sys.stdout.flush()
    hotwire.persist.Persister.getInstance().disable() 
    suite = unittest.TestLoader().loadTestsFromModule(hotwire.test_command)
    unittest.TextTestRunner().run(suite)
    suite = unittest.TestLoader().loadTestsFromModule(hotwire.test_completion)
    unittest.TextTestRunner().run(suite)
    if unix_avail:
        suite = unittest.TestLoader().loadTestsFromModule(hotwire.test_command_unix)
        unittest.TextTestRunner().run(suite)

if __name__ == '__main__':
    main()
